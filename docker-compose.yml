services:
  backend:
    build:
      context: ./backend
    container_name: backend
    volumes:
      - ./backend:/var/www/html:delegated
      - /var/www/html/vendor
      - ./backend/storage:/var/www/html/storage
    networks:
      - app-network
    env_file:
      - ./backend/.env

  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nuxtjs
    platform: linux/amd64
    env_file:
      - ./frontend/.env
    ports:
      - '4000:3000'
    environment:
      NODE_ENV: development
    command: "npm run dev"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8100:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  db_divine:
    image: mysql:8.0
    container_name: db_divine
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: J__Js
      MYSQL_DATABASE: divine
      MYSQL_USER: divine
      MYSQL_PASSWORD: 8Jl38k-j
    volumes:
      - db_data_divine:/var/lib/mysql
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "3110:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    platform: linux/amd64
    environment:
      PMA_HOST: db
      PMA_ARBITRARY: 1
      PMA_AUTH_TYPE: cookie
    ports:
      - "8180:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data_divine:



